
select *
from covid_deaths
order by 3,4; 

/*select *
from covid_vaccinations
order by 3,4
select data that we are going to be using 
*/

Select 
    location, 
    date, 
    total_cases, 
    new_cases, 
    total_deaths, 
    population
from 
    covid_deaths
order by 
    1,2;

/*looking at total cases vs total deaths */
/*Shows likelihood of dying if you contract covid in your country */

Select
    location,
    date,
    total_cases,
    total_deaths,
    (total_deaths * 100.0 / total_cases) AS DeathPercentage
From
    covid_deaths
Where 
    location like '%states%'
Order By
    location,
    date;
    
/*looking at total cases vs Population */
/*Shows what percentage of population got covid */

Select
    location,
    date,
    population,
    total_cases,
    (total_cases * 100.0 / population) AS PercentPopulationInfected
From
    covid_deaths
Where 
    location like '%states%'
Order By
    location,
    date;

/*looking at Countries with Highest Infection Rate compared to population*/

Select
    location,
    population,
    MAX(total_cases) AS HighestInfectionCount,
    MAX((total_cases * 100.0 / population)) AS PercentPopulationInfected
From
    covid_deaths
Group By
    location, population
Order By
    PercentPopulationInfected desc;
    
/*Showing Countries with Highest Death Count per Population*/

Select
    location,
    MAX(cast(total_deaths as int)) as TotalDeathCount
From
    covid_deaths
Where 
    continent is not null
Group By
    location
Order By
    TotalDeathCount desc;

/*LET'S BREAK THINGS DOWN BY CONTINENT*/

/* Showing continents with the highest death count per population*/

Select
    location,
    MAX(cast(total_deaths as int)) as TotalDeathCount
From
    covid_deaths
Where 
    continent is null
Group By
    location
Order By
    TotalDeathCount desc;
    
/*GLOBAL NUMBERS*/

SELECT
    date,
    SUM(new_cases) as total_cases,
    SUM(cast(new_deaths as int)) as total_deaths, 
    (SUM(cast(new_deaths as int)) * 100.0) / NULLIF(SUM(new_cases), 0) as DeathPercentage
FROM
    covid_deaths
WHERE 
    continent IS NOT NULL
GROUP BY 
    date
ORDER BY
    date;

/*Looking at total population vs. vaccinations */


Select
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location Order by dea.location, dea.date) as RollingpeopleVaccinated
    /*, (RollingPeopleVacinated/population)*100*/
    
From
    covid_deaths dea
Join
    covid_vaccinations vac
On
    dea.location = vac.location
    AND dea.date = vac.date
Where
    dea.continent IS NOT NULL
Order By
    2, 3;
    
/*Use CTE*/

With PopvaVac (Continent, Location, Date, Population, new_vaccinations, RollingPeopleVaccinated)
AS
(
    Select
        dea.continent,
        dea.location,
        dea.date,
        dea.population,
        vac.new_vaccinations,
        SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.date) as RollingpeopleVaccinated
    From
        covid_deaths dea
    Join
        covid_vaccinations vac
    On
        dea.location = vac.location
        AND dea.date = vac.date
    Where
        dea.continent IS NOT NULL
    
)
Select
    *,
    (RollingPeopleVaccinated *100.0/ Population) AS PercentageVaccinated
From
    PopvaVac
Order by
        Location, Date;
    
/*Temp Table*/


-- Drop the table if it exists
IF OBJECT_ID('tempdb..#PercentPopulationVaccinated') IS NOT NULL
    DROP TABLE #PercentPopulationVaccinated;

-- Create the table
CREATE TABLE #PercentPopulationVaccinated 
(
    Continent nvarchar(255),
    Location nvarchar(255),
    Date datetime,
    Population numeric,
    New_vaccinations numeric,
    RollingPeopleVaccinated numeric
);

-- Insert data into the table
INSERT INTO #PercentPopulationVaccinated
(
    Continent,
    Location,
    Date,
    Population,
    New_vaccinations,
    RollingPeopleVaccinated
)
SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.date) as RollingpeopleVaccinated
FROM
    covid_deaths dea
JOIN
    covid_vaccinations vac
ON
    dea.location = vac.location
    AND dea.date = vac.date;

-- Calculate the percentage vaccinated
SELECT
    *,
    (RollingPeopleVaccinated * 100.0 / Population) AS PercentageVaccinated
FROM
    #PercentPopulationVaccinated;

-- Creating a view to store data for later visualizations


IF OBJECT_ID('PercentPopulationVaccinated') IS NOT NULL
    DROP VIEW PercentPopulationVaccinated;

CREATE VIEW PercentPopulationVaccinated AS
SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.date) as RollingpeopleVaccinated
FROM
    covid_deaths dea
JOIN
    covid_vaccinations vac
ON
    dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent IS NOT NULL;

Select *
From PercentPopulationVaccinated; 



/*

Queries used for Tableau Project

*/

/*1*/

Select
    SUM(new_cases) as total_cases,    
    SUM(CAST(new_deaths AS INT)) as total_deaths, 
    (SUM(CAST(new_deaths AS INT)*100.0) / SUM(new_cases)) as DeathPercentage
From
    covid_deaths
Where
    continent IS NOT NULL
Order by
    1, 2;
    

/*Just a double check based off the data provided
numbers are extremely close so we will keep them- the second includes "International" location
Select
    SUM(new_cases) as total_cases,    
    SUM(CAST(new_deaths AS INT)) as total_deaths, 
    (SUM(CAST(new_deaths AS INT)) / SUM(new_cases)) * 100 as DeathPercentage
From
    covid_deaths
Where
    location = "World"
Order by
    1, 2;*/

/*
2
We take these out as they are not included in the above queries and want to stay consistent 
European Union is part of Europe*/

Select 
    location, 
    SUM(CAST(new_deaths AS INT)) as TotalDeathCount
From
    covid_deaths
Where
    continent IS NULL
    AND location NOT IN ("World", "European Union", "International", "High income", "Upper middle income", "Lower middle income", "Low income")
Group by
    location
Order by
    TotalDeathCount DESC;

 /*3*/
 
Select
    location,
    population,
    MAX(total_cases) as HighestInfectionCount,
    MAX((total_cases*100.0 /population)) as PercentPopulationInfected
From
    covid_deaths
Group by
    location,
    population
Order by
    PercentPopulationInfected desc;

/*4*/


Select
    location,
    population,
    date,
    MAX(total_cases) as HighestInfectionCount,
    MAX(total_cases * 100.0 / population) as PercentPopulationInfected
From
    covid_deaths
Group by  
    location, 
    population, 
    date
Order by
    PercentPopulationInfected DESC;

    
    
